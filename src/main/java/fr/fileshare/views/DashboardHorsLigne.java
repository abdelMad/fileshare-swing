/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.fileshare.views;

import fr.fileshare.dao.DocumentHandler;
import fr.fileshare.dao.IDocumentHandler;
import fr.fileshare.dao.UtilisateurHandler;
import fr.fileshare.model.Document;
import fr.fileshare.model.Utilisateur;
import fr.fileshare.utilities.Util;
import fr.fileshare.utilities.XmlHelper;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Set;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Element;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.html.HTML;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;

/**
 *
 * Interface de tableau de bord en mode hors ligne
 */
public class DashboardHorsLigne extends javax.swing.JFrame {

    /**
     * Creates new form DashboardHorsLigne
     */
    protected UndoableEditListener undoHandler = new UndoHandler();
    protected UndoManager undo = new UndoManager();
    private UndoAction undoAction = new UndoAction();
    private RedoAction redoAction = new RedoAction();
    private Action boldAction = new StyledEditorKit.BoldAction();
    private Action underlineAction = new StyledEditorKit.UnderlineAction();
    private Action italicAction = new StyledEditorKit.ItalicAction();
    private Color currentColor;
    String[] fontTypes = {"", "Arial", "Courier", "Comic Sans MS", "Helvetica", "Open Sans", "Tahoma", "Verdana"};
    Integer[] tailles = {-1, 5, 10, 15};
    JButton declancheAction = new JButton();
    private HTMLDocument document;
    private Connexion cnx;
    private String email;
    private String mdp;
    int keyPressed = -1;
    XmlHelper xmlHelper = new XmlHelper();
    List<HashMap<String, String>> documents = new ArrayList<>();
    private Cursor waitCursor = new Cursor(Cursor.WAIT_CURSOR);
    private Cursor defaultCursor = new Cursor(Cursor.DEFAULT_CURSOR);

    public DashboardHorsLigne(Connexion cnx, String email, String mdp) {
        initComponents();
        this.cnx = cnx;
        this.email = email;
        this.mdp = mdp;
        cnx.setVisible(false);
        this.setVisible(true);
        pnlPartage.setVisible(false);
        lblNomUtilisateur.setText(email);

        tabPaneMain.setUI(new javax.swing.plaf.metal.MetalTabbedPaneUI() {
            @Override
            protected int calculateTabAreaHeight(int tabPlacement, int horizRunCount, int maxTabHeight) {
                return 0;
            }

            protected void paintTabArea(Graphics g, int tabPlacement, int selectedIndex) {
            }
        });
        loadDocuments();
        declancheAction.setAction(new StyledEditorKit.FontFamilyAction(fontTypes[0], fontTypes[0]));
        declancheAction.doClick();
        jlblColorViewer.setIcon(jlabelIcon(Color.BLACK));
        HTMLEditorKit editorKit = new HTMLEditorKit();
        document = (HTMLDocument) editorKit.createDefaultDocument();
        docTxt.setDocument(document);
        document.addUndoableEditListener(undoHandler);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        nav = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblNomUtilisateur = new javax.swing.JLabel();
        lblUtilisateurImage = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        sideBar = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnMesDocuments = new javax.swing.JButton();
        icone1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        icone4 = new javax.swing.JLabel();
        btnNouveauDoc = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnDeco = new javax.swing.JButton();
        icone6 = new javax.swing.JLabel();
        icone8 = new javax.swing.JLabel();
        lblAccueilIcone3 = new javax.swing.JLabel();
        icone_message1 = new javax.swing.JLabel();
        icone9 = new javax.swing.JLabel();
        main = new javax.swing.JPanel();
        tabPaneMain = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        MesDocuments = new javax.swing.JTable();
        btnVoirmesDocs = new javax.swing.JButton();
        btnTelechargerDoc = new javax.swing.JButton();
        btnModifierMesDoc = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        btnVoirmesDocs1 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblTitreDoc = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        docTxt = new javax.swing.JEditorPane();
        jPanel13 = new javax.swing.JPanel();
        btnGras = new javax.swing.JButton();
        btnItalic = new javax.swing.JButton();
        btnSouligne = new javax.swing.JButton();
        cmbFonts = new javax.swing.JComboBox<>();
        jButton12 = new javax.swing.JButton();
        jlblColorViewer = new javax.swing.JLabel();
        btnAlignGauche = new javax.swing.JButton();
        btnAlignSroit = new javax.swing.JButton();
        btnAlignCentre = new javax.swing.JButton();
        btnBarre = new javax.swing.JButton();
        btnRedo = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        cmbTaille = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        txtIntitule = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtTags = new javax.swing.JTextField();
        pnlPartage = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtEmails = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        container.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nav.setBackground(new java.awt.Color(67, 142, 185));
        nav.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(98, 168, 209));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNomUtilisateur.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblNomUtilisateur.setForeground(new java.awt.Color(255, 255, 255));
        lblNomUtilisateur.setText("nom utilisateur");
        lblNomUtilisateur.setToolTipText("");
        jPanel2.add(lblNomUtilisateur, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, 20));
        jPanel2.add(lblUtilisateurImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 90));

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Bienvenue");
        jLabel10.setToolTipText("");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 70, 40));

        nav.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, 390, 90));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("File Share");
        nav.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        lblStatus.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(255, 51, 51));
        lblStatus.setText("Mode hors connexion");
        nav.add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        container.add(nav, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 90));

        sideBar.setBackground(new java.awt.Color(242, 242, 242));
        sideBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(229, 229, 229));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnMesDocuments.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnMesDocuments.setForeground(new java.awt.Color(88, 88, 88));
        btnMesDocuments.setText("Mes Documents");
        btnMesDocuments.setBorderPainted(false);
        btnMesDocuments.setContentAreaFilled(false);
        btnMesDocuments.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMesDocuments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesDocumentsActionPerformed(evt);
            }
        });
        jPanel1.add(btnMesDocuments, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 40));
        jPanel1.add(icone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        sideBar.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 250, 40));

        jSeparator3.setBackground(new java.awt.Color(229, 229, 229));
        sideBar.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 45, 250, 10));

        jSeparator4.setBackground(new java.awt.Color(229, 229, 229));
        sideBar.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 88, 240, 10));

        jSeparator5.setBackground(new java.awt.Color(229, 229, 229));
        sideBar.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 130, 250, 10));

        jPanel5.setBackground(new java.awt.Color(229, 229, 229));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(icone4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        btnNouveauDoc.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        btnNouveauDoc.setForeground(new java.awt.Color(88, 88, 88));
        btnNouveauDoc.setText("Nouveau Document");
        btnNouveauDoc.setBorderPainted(false);
        btnNouveauDoc.setContentAreaFilled(false);
        btnNouveauDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNouveauDoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNouveauDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNouveauDocActionPerformed(evt);
            }
        });
        jPanel5.add(btnNouveauDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 40));

        sideBar.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 52, -1, 40));

        jPanel7.setBackground(new java.awt.Color(229, 229, 229));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDeco.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        btnDeco.setForeground(new java.awt.Color(88, 88, 88));
        btnDeco.setText("Deconnexion");
        btnDeco.setToolTipText("");
        btnDeco.setBorderPainted(false);
        btnDeco.setContentAreaFilled(false);
        btnDeco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecoActionPerformed(evt);
            }
        });
        jPanel7.add(btnDeco, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 40));
        jPanel7.add(icone6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        sideBar.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 95, 230, 40));
        sideBar.add(icone8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));
        sideBar.add(lblAccueilIcone3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));
        sideBar.add(icone_message1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));
        sideBar.add(icone9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        container.add(sideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 230, 660));

        main.setBackground(new java.awt.Color(255, 255, 255));
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabPaneMain.setEnabled(false);
        tabPaneMain.setFocusTraversalKeysEnabled(false);
        tabPaneMain.setFocusable(false);
        tabPaneMain.setRequestFocusEnabled(false);
        tabPaneMain.setVerifyInputWhenFocusTarget(false);

        MesDocuments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id_doc", "Intitulé", "Date de publication", "Dernière modification", "Tags", "Statut"

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane3.setViewportView(MesDocuments);

    btnVoirmesDocs.setText("Voir Document");

    btnTelechargerDoc.setText("Télécharger");
    btnTelechargerDoc.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnTelechargerDocActionPerformed(evt);
        }
    });

    btnModifierMesDoc.setText("Modifier");
    btnModifierMesDoc.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnModifierMesDocActionPerformed(evt);
        }
    });

    jButton14.setText("Supprimer");
    jButton14.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton14ActionPerformed(evt);
        }
    });

    btnVoirmesDocs1.setText("Supprimer");
    btnVoirmesDocs1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnVoirmesDocs1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(236, 236, 236))
        .addGroup(jPanel8Layout.createSequentialGroup()
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1))
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(67, 67, 67)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnVoirmesDocs, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTelechargerDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(58, 58, 58)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnModifierMesDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVoirmesDocs1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(22, Short.MAX_VALUE))
    );
    jPanel8Layout.setVerticalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel8Layout.createSequentialGroup()
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jLabel1))
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(27, 27, 27)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnVoirmesDocs, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnModifierMesDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnTelechargerDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnVoirmesDocs1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(101, 101, 101)
            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    tabPaneMain.addTab("tab1", jPanel8);

    jPanel15.setBackground(new java.awt.Color(255, 255, 255));
    jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel2.setText("Document:");
    jPanel15.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

    lblTitreDoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    lblTitreDoc.setText("Blala:");
    jPanel15.add(lblTitreDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));

    jPanel16.setBackground(new java.awt.Color(255, 255, 255));
    jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    docTxt.setContentType("text/html"); // NOI18N
    docTxt.setText("");
    docTxt.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            docTxtKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            docTxtKeyReleased(evt);
        }
    });
    jScrollPane9.setViewportView(docTxt);

    jPanel16.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 700, 250));

    jPanel13.setBackground(new java.awt.Color(255, 255, 255));

    btnGras.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
    btnGras.setText("G");
    btnGras.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnGrasActionPerformed(evt);
        }
    });

    btnItalic.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
    btnItalic.setText("I");
    btnItalic.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnItalicActionPerformed(evt);
        }
    });

    btnSouligne.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
    btnSouligne.setText("S");
    btnSouligne.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSouligneActionPerformed(evt);
        }
    });

    cmbFonts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Police", "Arial", "Courier", "Comic Sans MS", "Helvetica", "Open Sans", "Tahoma", "Verdana" }));
    cmbFonts.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbFontsActionPerformed(evt);
        }
    });

    jButton12.setText("Couleur");
    jButton12.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton12ActionPerformed(evt);
        }
    });

    jlblColorViewer.setText("jLabel1");

    btnAlignGauche.setText("gauche");
    btnAlignGauche.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAlignGaucheActionPerformed(evt);
        }
    });

    btnAlignSroit.setText("droit");
    btnAlignSroit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAlignSroitActionPerformed(evt);
        }
    });

    btnAlignCentre.setText("center");
    btnAlignCentre.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAlignCentreActionPerformed(evt);
        }
    });

    btnBarre.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
    btnBarre.setText("ST");
    btnBarre.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBarreActionPerformed(evt);
        }
    });

    btnRedo.setText("->");
    btnRedo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRedoActionPerformed(evt);
        }
    });

    btnUndo.setText("<-");
    btnUndo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUndoActionPerformed(evt);
        }
    });

    cmbTaille.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Taille", "Petit", "Normal", "Grande" }));
    cmbTaille.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbTailleActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
    jPanel13.setLayout(jPanel13Layout);
    jPanel13Layout.setHorizontalGroup(
        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel13Layout.createSequentialGroup()
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jlblColorViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(btnAlignGauche)
                    .addGap(1, 1, 1)
                    .addComponent(btnAlignSroit)
                    .addGap(5, 5, 5)
                    .addComponent(btnAlignCentre))
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(btnUndo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(btnRedo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(67, 137, Short.MAX_VALUE))
        .addGroup(jPanel13Layout.createSequentialGroup()
            .addComponent(btnGras, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnItalic, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(2, 2, 2)
            .addComponent(btnSouligne, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnBarre, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(cmbFonts, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(cmbTaille, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(22, 22, 22))
    );
    jPanel13Layout.setVerticalGroup(
        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel13Layout.createSequentialGroup()
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnGras, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBarre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFonts, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTaille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSouligne, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnItalic, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(13, 13, 13)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jlblColorViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton12)
                .addComponent(btnAlignGauche)
                .addComponent(btnAlignSroit)
                .addComponent(btnAlignCentre))
            .addGap(1, 1, 1)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnUndo)
                .addComponent(btnRedo)))
    );

    jPanel16.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 500, 110));

    jButton1.setText("Enregistrer");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    jPanel16.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 140, 40));

    jPanel15.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 740, 500));

    jButton9.setText("Modifier");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });
    jPanel15.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

    tabPaneMain.addTab("modif doc", jPanel15);

    jLabel7.setText("Titre du document");

    cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Just moi", "Des utilisateurs" }));
    cmbStatus.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbStatusActionPerformed(evt);
        }
    });

    txtDesc.setColumns(20);
    txtDesc.setRows(5);
    jScrollPane10.setViewportView(txtDesc);

    jLabel8.setText("Description");

    jLabel11.setText("Tags");

    jLabel12.setText("Qui peut voir ce fichier");

    pnlPartage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel13.setText("Veuillez entrer les adresses emails des utilisateurs");
    pnlPartage.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, -1));
    pnlPartage.add(txtEmails, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 260, 50));

    jButton10.setText("Valider");
    jButton10.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton10ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
    jPanel12.setLayout(jPanel12Layout);
    jPanel12Layout.setHorizontalGroup(
        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(pnlPartage, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGap(360, 360, 360)
            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGap(156, 156, 156)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel7)
                .addComponent(jLabel8)
                .addComponent(jLabel12)
                .addComponent(jLabel11))
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                        .addComponent(txtTags)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(txtIntitule, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
    );
    jPanel12Layout.setVerticalGroup(
        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGap(56, 56, 56)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtIntitule, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7))
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(49, 49, 49)
                    .addComponent(jLabel8)))
            .addGap(20, 20, 20)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel11))
                .addComponent(txtTags, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(40, 40, 40)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel12)
                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(22, 22, 22)
            .addComponent(pnlPartage, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(20, 20, 20)
            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    tabPaneMain.addTab("tab5", jPanel12);

    main.add(tabPaneMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 770, 600));

    container.add(main, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 800, 620));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        /* Suppression */

        DefaultTableModel model = (DefaultTableModel) MesDocuments.getModel();
        int i = MesDocuments.getSelectedRow();

        if (i >= 0) {
            /* Verifier si l'utilisateur connecté est l'auteur du document avant suppression */
            int confirmation = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer ce document ?", "Confirmation suppression", JOptionPane.YES_NO_OPTION);
            if (confirmation == 0) {
                model.removeRow(i);

            }

        } else {
            MessageBox.show("Aucun Document n'a été selectionné !", MessageBox.WARNING, this);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void docTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docTxtKeyPressed

        if (evt.getKeyCode() == 157 || evt.getKeyCode() == 17) {
            keyPressed = evt.getKeyCode();
        }
    }//GEN-LAST:event_docTxtKeyPressed

    private void docTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docTxtKeyReleased

        //webscoket modification
        if (evt.getKeyCode() != 157 && evt.getKeyCode() != 17) {

            System.out.println("justpressedKey: " + evt.getKeyCode());
            System.out.println("keyPressed: " + keyPressed);
            System.out.println("====");
            if ((keyPressed == 157 || keyPressed == 17) && evt.getKeyCode() == 85) {
                btnRedo.doClick();
            } else if ((keyPressed == 157 || keyPressed == 17) && evt.getKeyCode() == 90) {
                System.out.println("keyPressed: " + keyPressed);
                btnUndo.doClick();
            }

        } else {
            keyPressed = -1;
        }
    }//GEN-LAST:event_docTxtKeyReleased

    private void btnGrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrasActionPerformed
        declancheAction = new JButton(boldAction);
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnGrasActionPerformed

    private void btnItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItalicActionPerformed
        declancheAction = new JButton(italicAction);
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnItalicActionPerformed

    private void btnSouligneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSouligneActionPerformed
        declancheAction = new JButton(underlineAction);
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnSouligneActionPerformed

    private void cmbFontsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFontsActionPerformed
        int index = cmbFonts.getSelectedIndex();
        if (fontTypes[index] != "") {
            System.out.println(fontTypes[index]);
            declancheAction.setAction(new StyledEditorKit.FontFamilyAction(fontTypes[index], fontTypes[index]));
            declancheAction.doClick();
            docTxt.requestFocus();
        }
    }//GEN-LAST:event_cmbFontsActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Color newColor = JColorChooser.showDialog(null, "Choose a color", currentColor);
        currentColor = newColor;
        declancheAction = new JButton(new StyledEditorKit.ForegroundAction("currentColor", currentColor));
        declancheAction.doClick();

        jlblColorViewer.setIcon(jlabelIcon(currentColor));
        docTxt.requestFocus();
        repaint();
    }//GEN-LAST:event_jButton12ActionPerformed
    private ImageIcon jlabelIcon(Color color) {
        BufferedImage image = new BufferedImage(20, 20, java.awt.image.BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = image.createGraphics();
        graphics.setColor(color);
        graphics.fillRect(0, 0, 20, 20);
        graphics.setXORMode(color);
        graphics.drawRect(0, 0, 20 - 1, 20 - 1);
        image.flush();
        ImageIcon icon = new ImageIcon(image);
        return icon;
    }
    private void btnAlignGaucheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlignGaucheActionPerformed
        declancheAction.setAction(new StyledEditorKit.AlignmentAction("Left Align", StyleConstants.ALIGN_LEFT));
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnAlignGaucheActionPerformed

    private void btnAlignSroitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlignSroitActionPerformed
        declancheAction = new JButton(new StyledEditorKit.AlignmentAction("Right Align", StyleConstants.ALIGN_RIGHT));
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnAlignSroitActionPerformed

    private void btnAlignCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlignCentreActionPerformed
        declancheAction = new JButton(new StyledEditorKit.AlignmentAction("Center", StyleConstants.ALIGN_CENTER));
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnAlignCentreActionPerformed

    private void btnBarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarreActionPerformed
        declancheAction = new JButton(new StrikeThroughAction());
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnBarreActionPerformed

    private void btnRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedoActionPerformed
        declancheAction = new JButton(redoAction);
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnRedoActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed

        declancheAction = new JButton(undoAction);
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnUndoActionPerformed

    private void cmbTailleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTailleActionPerformed
        int index = cmbTaille.getSelectedIndex();
        if (tailles[index] != -1) {
            declancheAction = new JButton(new StyledEditorKit.FontSizeAction(String.valueOf(tailles[index]), tailles[index]));
            declancheAction.doClick();
            docTxt.requestFocus();
        }
    }//GEN-LAST:event_cmbTailleActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        txtIntitule.setText(selectedDoc.get("intitule"));
        txtDesc.setText(selectedDoc.get("description"));
        txtTags.setText(selectedDoc.get("tags"));
        cmbStatus.setSelectedIndex(Integer.parseInt(selectedDoc.get("status")));
        txtEmails.setText(selectedDoc.get("utilAutorises"));
        modifDetails = true;
        tabPaneMain.setSelectedIndex(2);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void cmbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusActionPerformed
        if (cmbStatus.getSelectedIndex() == 2) {
            pnlPartage.setVisible(true);
        } else {
            pnlPartage.setVisible(false);
        }
        pnlPartage.repaint();
    }//GEN-LAST:event_cmbStatusActionPerformed
    boolean modifDetails = false;
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        String intitule = txtIntitule.getText();
        String description = txtDesc.getText();
        String tags = txtTags.getText();
        String emails = "";
        int status = cmbStatus.getSelectedIndex();

        if (intitule.length() != 0) {
            if (status == Document.PARTAGE) {
                emails = txtEmails.getText();
                if (emails.length() == 0) {
                    System.out.println("erreur msg");
                    return;
                }
            }
            HashMap<String, String> doc = new HashMap<>();
            if (modifDetails) {
                doc.put("idDoc", selectedDoc.get("idDoc"));
            } else {
                doc.put("idDoc", Util.generateUniqueToken());

            }
            // (idDoc,emailAuteur,mdpAuteur,datePub,tags,text,version,status,utilAutorises)
            Date currentDate = new Date();
             SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm");
             
            doc.put("intitule", intitule);
            doc.put("emailAuteur", email);
            doc.put("mdpAuteur", mdp);
            doc.put("datePub", formatter.format(currentDate));
            doc.put("tags", tags);
            doc.put("description", description);
            doc.put("version", Util.hashString(Util.generateUniqueToken()));
            doc.put("status", Integer.toString(cmbStatus.getSelectedIndex()));
            if (cmbStatus.getSelectedIndex() == Document.PARTAGE) {

                doc.put("utilAutorises", txtEmails.getText());
            } else {
                doc.put("utilAutorises", "");
            }
            if (!modifDetails) {
                doc.put("synchronise", "false");
                List<HashMap<String, String>> ds = new ArrayList<>();
                ds.add(doc);
                txtDesc.setText("");
                txtEmails.setText("");
                txtIntitule.setText("");
                txtTags.setText("");
                pnlPartage.setVisible(false);
                cmbStatus.setSelectedIndex(0);
                xmlHelper.saveToXMLDocument(ds);
                selectedDoc = doc;
                __modificationDocument();
            } else {
                
                doc.put("synchronise", selectedDoc.get("synchronise"));
                doc.put("text", selectedDoc.get("text"));
                doc.put("idDocPublie", selectedDoc.get("idDocPublie"));
                xmlHelper.modifierDocumentXml(doc);
                selectedDoc = doc;
            }

        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void btnDecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecoActionPerformed
        //this.setDefaultCloseOperation(PROPERTIES);
        cnx.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnDecoActionPerformed

    private void btnMesDocumentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesDocumentsActionPerformed
        loadDocuments();
    }//GEN-LAST:event_btnMesDocumentsActionPerformed
    private void loadDocuments() {
        documents = xmlHelper.readXmlDocument(email, mdp);

        DefaultTableModel model = (DefaultTableModel) MesDocuments.getModel();
        /* Supprimer les données du JTable avant chaque remplissage */
        model.setRowCount(0);

        Object rowData[] = new Object[6];
        /* Cacher les colonne id_documents et id_auteur  et id_utilisateurs*/
        MesDocuments.getColumnModel().getColumn(0).setMinWidth(0);
        MesDocuments.getColumnModel().getColumn(0).setMaxWidth(0);
        MesDocuments.getColumnModel().getColumn(0).setWidth(0);

        for (int i = 0; i < documents.size(); i++) {
            HashMap<String, String> doc = documents.get(i);
            rowData[0] = doc.get("idDoc");
            rowData[1] = doc.get("intitule");
            rowData[2] = doc.get("datePub");
            rowData[3] = doc.get("datePub");
            rowData[4] = doc.get("tags");
            switch (doc.get("status")) {
                case "0":
                    rowData[5] = "Public";
                    break;
                case "1":
                    rowData[5] = "Privé";
                    break;
                case "2":
                    String partager_avec = "Partagé avec ";
                    String idUtilisateurs = "";
                    int cpt = 0;
                    String[] emails = doc.get("utilAutorises").split(" ");
                    for (int j = 0; j < emails.length; j++) {
                        String email = emails[j];
                        partager_avec += email + " ";
                    }

                    rowData[5] = partager_avec;
                    break;
                default:
                    break;
            }
            model.addRow(rowData);
        }
        tabPaneMain.setSelectedIndex(0);
    }
    private void btnNouveauDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNouveauDocActionPerformed
        tabPaneMain.setSelectedIndex(2);
        modifDetails = false;

    }//GEN-LAST:event_btnNouveauDocActionPerformed
    HashMap<String, String> selectedDoc = new HashMap<>();
    private void btnModifierMesDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierMesDocActionPerformed
        DefaultTableModel model = (DefaultTableModel) MesDocuments.getModel();
        int i = MesDocuments.getSelectedRow();

        if (i >= 0) {
            selectedDoc = documents.get(i);
            __modificationDocument();
        } else {
            MessageBox.show("Aucun Document n'a été selectionné !", MessageBox.WARNING, this);
        }


    }//GEN-LAST:event_btnModifierMesDocActionPerformed
    private void __modificationDocument() {
        lblTitreDoc.setText(selectedDoc.get("intitule"));
        docTxt.setDocument(document);

        try {
            docTxt.setText(selectedDoc.get("text"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        tabPaneMain.setSelectedIndex(1);
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        cnx.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(selectedDoc.get("synchronise").equals("true"))
                    selectedDoc.put("version", Util.hashString(Util.generateUniqueToken()));
        selectedDoc.put("text", docTxt.getText());
        xmlHelper.modifierDocumentXml(selectedDoc);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnVoirmesDocs1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoirmesDocs1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) MesDocuments.getModel();
        int i = MesDocuments.getSelectedRow();

        if (i >= 0) {
            selectedDoc = documents.get(i);
            xmlHelper.supprimerDocumentXml(selectedDoc.get("idDoc"));
            model.removeRow(i);
        }
    }//GEN-LAST:event_btnVoirmesDocs1ActionPerformed

    private void btnTelechargerDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelechargerDocActionPerformed

        int i = MesDocuments.getSelectedRow();

        if (i >= 0) {
            selectedDoc = documents.get(i);
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Téléchargement Document");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            if (fc.showOpenDialog(btnTelechargerDoc) == JFileChooser.APPROVE_OPTION) {
                this.setCursor(waitCursor);
                btnTelechargerDoc.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                IDocumentHandler documentHandler = new DocumentHandler();
                Document document = new Document();
                document.setIntitule(selectedDoc.get("intitule"));
                document.setDernierContenu(selectedDoc.get("text"));
                documentHandler.telechargerDoc(document, fc.getSelectedFile().getAbsolutePath());
            }
            this.setCursor(defaultCursor);
        }
    }//GEN-LAST:event_btnTelechargerDocActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MesDocuments;
    private javax.swing.JButton btnAlignCentre;
    private javax.swing.JButton btnAlignGauche;
    private javax.swing.JButton btnAlignSroit;
    private javax.swing.JButton btnBarre;
    private javax.swing.JButton btnDeco;
    private javax.swing.JButton btnGras;
    private javax.swing.JButton btnItalic;
    private javax.swing.JButton btnMesDocuments;
    private javax.swing.JButton btnModifierMesDoc;
    private javax.swing.JButton btnNouveauDoc;
    private javax.swing.JButton btnRedo;
    private javax.swing.JButton btnSouligne;
    private javax.swing.JButton btnTelechargerDoc;
    private javax.swing.JButton btnUndo;
    private javax.swing.JButton btnVoirmesDocs;
    private javax.swing.JButton btnVoirmesDocs1;
    private javax.swing.JComboBox<String> cmbFonts;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbTaille;
    private javax.swing.JPanel container;
    private javax.swing.JEditorPane docTxt;
    private javax.swing.JLabel icone1;
    private javax.swing.JLabel icone4;
    private javax.swing.JLabel icone6;
    private javax.swing.JLabel icone8;
    private javax.swing.JLabel icone9;
    private javax.swing.JLabel icone_message1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel jlblColorViewer;
    private javax.swing.JLabel lblAccueilIcone3;
    private javax.swing.JLabel lblNomUtilisateur;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitreDoc;
    private javax.swing.JLabel lblUtilisateurImage;
    private javax.swing.JPanel main;
    private javax.swing.JPanel nav;
    private javax.swing.JPanel pnlPartage;
    private javax.swing.JPanel sideBar;
    public javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtEmails;
    private javax.swing.JTextField txtIntitule;
    private javax.swing.JTextField txtTags;
    // End of variables declaration//GEN-END:variables
class StrikeThroughAction extends StyledEditorKit.StyledTextAction {

        public StrikeThroughAction() {
            super(StyleConstants.StrikeThrough.toString());
        }

        public void actionPerformed(ActionEvent ae) {
            JEditorPane editor = getEditor(ae);
            if (editor != null) {
                StyledEditorKit kit = getStyledEditorKit(editor);
                MutableAttributeSet attr = kit.getInputAttributes();
                boolean strikeThrough = (StyleConstants.isStrikeThrough(attr)) ? false : true;
                SimpleAttributeSet sas = new SimpleAttributeSet();
                StyleConstants.setStrikeThrough(sas, strikeThrough);
                setCharacterAttributes(editor, sas, false);
            }
        }
    }

    class UndoHandler implements UndoableEditListener {

        /**
         * Messaged when the Document has created an edit, the edit is added to
         * <code>undo</code>, an instance of UndoManager.
         */
        public void undoableEditHappened(UndoableEditEvent e) {
            undo.addEdit(e.getEdit());
            undoAction.update();
            redoAction.update();
        }
    }

    class UndoAction extends AbstractAction {

        public UndoAction() {
            super("Undo");
            setEnabled(false);
        }

        public void actionPerformed(ActionEvent e) {
            try {
                undo.undo();
            } catch (CannotUndoException ex) {
                System.out.println("Unable to undo: " + ex);
                ex.printStackTrace();
            }
            update();
            redoAction.update();
        }

        protected void update() {
            if (undo.canUndo()) {
                setEnabled(true);
                putValue(Action.NAME, undo.getUndoPresentationName());
            } else {
                setEnabled(false);
                putValue(Action.NAME, "Undo");
            }
        }
    }

    class RedoAction extends AbstractAction {

        public RedoAction() {
            super("Redo");
            setEnabled(false);
        }

        public void actionPerformed(ActionEvent e) {
            try {
                undo.redo();
            } catch (CannotRedoException ex) {
                System.err.println("Unable to redo: " + ex);
                ex.printStackTrace();
            }
            update();
            undoAction.update();
        }

        protected void update() {
            if (undo.canRedo()) {
                setEnabled(true);
                putValue(Action.NAME, undo.getRedoPresentationName());
            } else {
                setEnabled(false);
                putValue(Action.NAME, "Redo");
            }
        }
    }
}
