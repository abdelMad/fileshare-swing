/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.fileshare.views;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JEditorPane;
import javax.swing.JMenuItem;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.html.HTML;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.undo.*;

/**
 *
 * @author abdelmoghitmadih
 */
public class Debug extends javax.swing.JFrame {

    /**
     * Creates new form Debug
     */
    protected UndoableEditListener undoHandler = new UndoHandler();

    /**
     * UndoManager that we add edits to.
     */
    protected UndoManager undo = new UndoManager();
    /**
     * Listener for the edits on the current document.
     */

    /**
     * UndoManager that we add edits to.
     */
    private UndoAction undoAction = new UndoAction();
    private RedoAction redoAction = new RedoAction();

    private Action boldAction = new StyledEditorKit.BoldAction();
    private Action underlineAction = new StyledEditorKit.UnderlineAction();
    private Action italicAction = new StyledEditorKit.ItalicAction();
    private Color currentColor;
    String[] fontTypes = {"", "Arial", "Courier", "Comic Sans MS", "Helvetica", "Open Sans", "Tahoma", "Verdana"};
    Integer[] tailles = {-1, 1, 3, 5};
    JButton declancheAction = new JButton();
    private HTMLDocument document;

    public Debug() {
        initComponents();
        HTMLEditorKit editorKit = new HTMLEditorKit();
        document = (HTMLDocument) editorKit.createDefaultDocument();
        declancheAction.setAction(new StyledEditorKit.FontFamilyAction(fontTypes[0], fontTypes[0]));
        declancheAction.doClick();
        jlblColorViewer.setIcon(jlabelIcon(Color.BLACK));
        docTxt.setText("  \n"
                + "    <b>p</b>\n"
                + "  \n"
                + "  \n"
                + "    test xxxeededdedededed\n"
                + "\n"
                + "    <div>\n"
                + "      jnjknsjnksdjnfksjdnfksdfndsfsdfjnkjsnkjsndkjfnskdjfnsdkjf<b>fdsfsdfsdf</b>\n"
                + "    </div>\n"
                + "    <div>\n"
                + "      <b>lklklllknsdnfsjdkfnkjnp<br></b>\n"
                + "\n"
                + "      <div align=\"center\">\n"
                + "        <font color=\"#f83a22\">Lorem Ipsum&nbsp;</font>\n"
                + "      </div>\n"
                + "    </div>\n"
                + "  \n"
                + "");
        docTxt.setDocument(document);
        document.addUndoableEditListener(undoHandler);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane9 = new javax.swing.JScrollPane();
        docTxt = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        btnGras = new javax.swing.JButton();
        btnItalic = new javax.swing.JButton();
        btnSouligne = new javax.swing.JButton();
        cmbFonts = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jlblColorViewer = new javax.swing.JLabel();
        btnAlignGauche = new javax.swing.JButton();
        btnAlignSroit = new javax.swing.JButton();
        btnAlignCentre = new javax.swing.JButton();
        btnBarre = new javax.swing.JButton();
        btnRedo = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        cmbTaille = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        docTxt.setContentType("text/html"); // NOI18N
        docTxt.setText("");
        docTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                docTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docTxtKeyReleased(evt);
            }
        });
        jScrollPane9.setViewportView(docTxt);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGras.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnGras.setText("G");
        btnGras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrasActionPerformed(evt);
            }
        });
        jPanel1.add(btnGras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 38, 37));

        btnItalic.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        btnItalic.setText("I");
        btnItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItalicActionPerformed(evt);
            }
        });
        jPanel1.add(btnItalic, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 38, 37));

        btnSouligne.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnSouligne.setText("S");
        btnSouligne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSouligneActionPerformed(evt);
            }
        });
        jPanel1.add(btnSouligne, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 38, 37));

        cmbFonts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Police", "Arial", "Courier", "Comic Sans MS", "Helvetica", "Open Sans", "Tahoma", "Verdana" }));
        cmbFonts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFontsActionPerformed(evt);
            }
        });
        jPanel1.add(cmbFonts, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 130, 30));

        jButton1.setText("Couleur");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 80, -1));

        jlblColorViewer.setText("jLabel1");
        jPanel1.add(jlblColorViewer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 20, 20));

        btnAlignGauche.setText("gauche");
        btnAlignGauche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlignGaucheActionPerformed(evt);
            }
        });
        jPanel1.add(btnAlignGauche, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        btnAlignSroit.setText("droit");
        btnAlignSroit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlignSroitActionPerformed(evt);
            }
        });
        jPanel1.add(btnAlignSroit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, -1));

        btnAlignCentre.setText("center");
        btnAlignCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlignCentreActionPerformed(evt);
            }
        });
        jPanel1.add(btnAlignCentre, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        btnBarre.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnBarre.setText("ST");
        btnBarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarreActionPerformed(evt);
            }
        });
        jPanel1.add(btnBarre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 38, 37));

        btnRedo.setText("->");
        btnRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedoActionPerformed(evt);
            }
        });
        jPanel1.add(btnRedo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 50, -1));

        btnUndo.setText("<-");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });
        jPanel1.add(btnUndo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 50, -1));

        cmbTaille.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Taille", "Petit", "Normal", "Grande" }));
        cmbTaille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTailleActionPerformed(evt);
            }
        });
        jPanel1.add(cmbTaille, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 120, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void docTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docTxtKeyReleased

        //webscoket modification
        System.out.println(docTxt.getText().substring(docTxt.getText().indexOf("<body>")+"<body>".length(),docTxt.getText().indexOf("</body>")));
        if (evt.getKeyCode() != 157 && evt.getKeyCode() != 17) {

            System.out.println("justpressedKey: " + evt.getKeyCode());
            System.out.println("keyPressed: " + keyPressed);
            System.out.println("====");
            if ((keyPressed == 157 || keyPressed == 17) && evt.getKeyCode() == 85) {
                btnRedo.doClick();
            } else if ((keyPressed == 157 || keyPressed == 17) && evt.getKeyCode() == 90) {
                System.out.println("keyPressed: " + keyPressed);
                btnUndo.doClick();
            }

        } else {
            keyPressed = -1;
        }
    }//GEN-LAST:event_docTxtKeyReleased

    private void cmbFontsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFontsActionPerformed
        int index = cmbFonts.getSelectedIndex();
        if (fontTypes[index] != "") {
            System.out.println(fontTypes[index]);
            declancheAction.setAction(new StyledEditorKit.FontFamilyAction(fontTypes[index], fontTypes[index]));
            declancheAction.doClick();
            docTxt.requestFocus();
        }

    }//GEN-LAST:event_cmbFontsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Color newColor = JColorChooser.showDialog(null, "Choose a color", currentColor);
        currentColor = newColor;
        declancheAction.setAction(new StyledEditorKit.ForegroundAction("currentColor", currentColor));
        declancheAction.doClick();

        jlblColorViewer.setIcon(jlabelIcon(currentColor));
        docTxt.requestFocus();
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnGrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrasActionPerformed
        declancheAction.setAction(boldAction);
        declancheAction.doClick();
        docTxt.requestFocus();

    }//GEN-LAST:event_btnGrasActionPerformed

    private void btnItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItalicActionPerformed
        declancheAction.setAction(italicAction);
        declancheAction.doClick();
        docTxt.requestFocus();


    }//GEN-LAST:event_btnItalicActionPerformed

    private void btnSouligneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSouligneActionPerformed
        declancheAction.setAction(underlineAction);
        declancheAction.doClick();
        docTxt.requestFocus();


    }//GEN-LAST:event_btnSouligneActionPerformed

    private void btnBarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarreActionPerformed
        declancheAction.setAction(new StrikeThroughAction());
        declancheAction.doClick();
        docTxt.requestFocus();


    }//GEN-LAST:event_btnBarreActionPerformed

    private void btnAlignGaucheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlignGaucheActionPerformed
        declancheAction.setAction(new StyledEditorKit.AlignmentAction("Left Align", StyleConstants.ALIGN_LEFT));
        declancheAction.doClick();
        docTxt.requestFocus();

    }//GEN-LAST:event_btnAlignGaucheActionPerformed

    private void btnAlignSroitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlignSroitActionPerformed
        declancheAction.setAction(new StyledEditorKit.AlignmentAction("Right Align", StyleConstants.ALIGN_RIGHT));
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnAlignSroitActionPerformed

    private void btnAlignCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlignCentreActionPerformed
        declancheAction.setAction(new StyledEditorKit.AlignmentAction("Center", StyleConstants.ALIGN_CENTER));
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnAlignCentreActionPerformed

    private void btnRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedoActionPerformed
        declancheAction.setAction(redoAction);
        declancheAction.doClick();
        docTxt.requestFocus();

    }//GEN-LAST:event_btnRedoActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed

        declancheAction.setAction(undoAction);
        declancheAction.doClick();
        docTxt.requestFocus();
    }//GEN-LAST:event_btnUndoActionPerformed
    int keyPressed = -1;
    private void docTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docTxtKeyPressed
        // System.out.println(evt.getKeyCode());
        if (evt.getKeyCode() == 157 || evt.getKeyCode() == 17) {
            keyPressed = evt.getKeyCode();
        }


    }//GEN-LAST:event_docTxtKeyPressed

    private void cmbTailleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTailleActionPerformed
        int index = cmbTaille.getSelectedIndex();
        if (tailles[index] != -1) {
            declancheAction.setAction(new StyledEditorKit.FontSizeAction(String.valueOf(tailles[index]), tailles[index]));
            declancheAction.doClick();
            docTxt.requestFocus();
        }

    }//GEN-LAST:event_cmbTailleActionPerformed
    private ImageIcon jlabelIcon(Color color) {
        BufferedImage image = new BufferedImage(20, 20, java.awt.image.BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = image.createGraphics();
        graphics.setColor(color);
        graphics.fillRect(0, 0, 20, 20);
        graphics.setXORMode(color);
        graphics.drawRect(0, 0, 20 - 1, 20 - 1);
        image.flush();
        ImageIcon icon = new ImageIcon(image);
        return icon;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Debug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Debug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Debug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Debug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Debug().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlignCentre;
    private javax.swing.JButton btnAlignGauche;
    private javax.swing.JButton btnAlignSroit;
    private javax.swing.JButton btnBarre;
    private javax.swing.JButton btnGras;
    private javax.swing.JButton btnItalic;
    private javax.swing.JButton btnRedo;
    private javax.swing.JButton btnSouligne;
    private javax.swing.JButton btnUndo;
    private javax.swing.JComboBox<String> cmbFonts;
    private javax.swing.JComboBox<String> cmbTaille;
    private javax.swing.JEditorPane docTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel jlblColorViewer;
    // End of variables declaration//GEN-END:variables
class UndoHandler implements UndoableEditListener {

        /**
         * Messaged when the Document has created an edit, the edit is added to
         * <code>undo</code>, an instance of UndoManager.
         */
        public void undoableEditHappened(UndoableEditEvent e) {
            undo.addEdit(e.getEdit());
            undoAction.update();
            redoAction.update();
        }
    }

    class UndoAction extends AbstractAction {

        public UndoAction() {
            super("Undo");
            setEnabled(false);
        }

        public void actionPerformed(ActionEvent e) {
            try {
                undo.undo();
            } catch (CannotUndoException ex) {
                System.out.println("Unable to undo: " + ex);
                ex.printStackTrace();
            }
            update();
            redoAction.update();
        }

        protected void update() {
            if (undo.canUndo()) {
                setEnabled(true);
                putValue(Action.NAME, undo.getUndoPresentationName());
            } else {
                setEnabled(false);
                putValue(Action.NAME, "Undo");
            }
        }
    }

    class RedoAction extends AbstractAction {

        public RedoAction() {
            super("Redo");
            setEnabled(false);
        }

        public void actionPerformed(ActionEvent e) {
            try {
                undo.redo();
            } catch (CannotRedoException ex) {
                System.err.println("Unable to redo: " + ex);
                ex.printStackTrace();
            }
            update();
            undoAction.update();
        }

        protected void update() {
            if (undo.canRedo()) {
                setEnabled(true);
                putValue(Action.NAME, undo.getRedoPresentationName());
            } else {
                setEnabled(false);
                putValue(Action.NAME, "Redo");
            }
        }
    }

}

class StrikeThroughAction extends StyledEditorKit.StyledTextAction {

    public StrikeThroughAction() {
        super(StyleConstants.StrikeThrough.toString());
    }

    public void actionPerformed(ActionEvent ae) {
        JEditorPane editor = getEditor(ae);
        if (editor != null) {
            StyledEditorKit kit = getStyledEditorKit(editor);
            MutableAttributeSet attr = kit.getInputAttributes();
            boolean strikeThrough = (StyleConstants.isStrikeThrough(attr)) ? false : true;
            SimpleAttributeSet sas = new SimpleAttributeSet();
            StyleConstants.setStrikeThrough(sas, strikeThrough);
            setCharacterAttributes(editor, sas, false);
        }
    }
}
